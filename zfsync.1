.\" Copyright 2022 Casey Witt
.\" reference at https://manpages.bsd.lv
.\"
.Dd March 24, 2022
.Dt ZFSYNC 1 SMM
.Os
.Sh NAME
.Nm zfsync
.Nd snapshot and backup utility for ZFS file systems
.Sh SYNOPSIS
.Nm \" help subcommand
.Fl ?
.Nm \" snapshot subcommand
.Cm snapshot
.Op Fl r Ns | Ns Fl d Ar depth
.Ar filesystem Ns | Ns Ar volume Ns ...
.Nm \" mirror subcommand
.Cm mirror
.Ar destination
.Op Fl r Ns | Ns Fl d Ar depth
.Ar filesystem Ns | Ns Ar volume Ns ...
.Nm \" backup subcommand
.Cm backup
.Ar destination
.Op Fl r Ns | Ns Fl d Ar depth
.Ar filesystem Ns | Ns Ar volume Ns ...
.Nm \" prune subcommand
.Cm prune
.Op Fl f
.Op Fl r Ns | Ns Fl d Ar depth
.Oo Ar filesystem Ns | Ns Ar volume Ns Oc Ns ...
.Nm \" rprune subcommand
.Cm rprune
.Ar destination
.Op Fl f
.Op Fl r Ns | Ns Fl d Ar depth
.Oo Ar filesystem Ns | Ns Ar volume Ns Oc Ns ...
.Nm \" server subcommand
.Cm server
.Ar filesystem_root
.Nm \" list subcommand
.Cm list
.Ar destination
.Op Fl r Ns | Ns Fl d Ar depth
.Op Fl Hp
.Oo Fl o Ar property Ns Oo , Ns Ar property Oc Ns ... Oc
.Oo Fl s Ar property Oc Ns ...
.Oo Fl S Ar property Oc Ns ...
.Oo Fl t Ar type Ns Oo , Ns Ar type Oc Ns ... Oc
.Oo Ar filesystem Ns | Ns Ar volume Ns | Ns Ar snapshot Oc
.Nm \" destroy subcommand
.Cm destroy
.Ar destination
.Op Fl Rfnprv
.Ar filesystem Ns | Ns Ar volume
.Nm \" destroy subcommand
.Cm destroy
.Ar destination
.Op Fl Rdnprv
.Ar filesystem Ns | Ns Ar volume Ns @ Ns Ar snap Ns
.Oo % Ns Ar snap Ns Oo , Ns Ar snap Ns Oo % Ns Ar snap Oc Oc Oc
.Nm \" destroy subcommand
.Cm destroy
.Ar destination
.Ar filesystem Ns | Ns Ar volume Ns # Ns Ar bookmark
.Nm \" recover subcommand
.Cm recover
.Ar destination
.Op Fl DLPRbcehnpvw
.Op Oo Fl I Ns | Ns Fl i Oc Ar snapshot
.Ar snapshot
.Nm \" recover subcommand
.Cm recover
.Ar destination
.Op Fl LPcenvw
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Ar filesystem Ns | Ns Ar volume Ns | Ns Ar snapshot
.Nm \" recover subcommand
.Cm recover
.Ar destination
.Op Fl Penv
.Fl t Ar receive_resume_token
.Nm \" configuser subcommand
.Cm configuser
.Op Ar username
.Op Ar home_dir
.Nm \" allowsend subcommand
.Cm allowsend
.Ar filesystem
.Op Ar username
.Nm \" allowreceive subcommand
.Cm allowreceive
.Ar filesystem
.Ar key
.Op Ar quota
.Op Ar username
.Nm \" version subcommand
.Cm version
.Sh DESCRIPTION
The
.Nm
script is used to create snapshots of a zfs filesystem along with corresponding
bookmarks, and to mirror snapshots to a marginally trusted remote backup
server over
.Xr ssh 1 .
.Pp
The design goals of the script are to be simple to use, not depend on any
metadata stored in the zfs filesystem itself, be fault tolerant and able to
resume mirror operations which were interrupted.
.Pp
The best way to explain the term "marginally trusted" is to consider the
original design criteria which was to allow me and my friend living in
different states to backup our data to each other in a way that
allowed a predictable limit to the amount of data backed up (ie. quotas), and
ensured that we could not access each others data (ie. we don't have each
others encryption keys). So marginally trusted can be considered to mean
"not malicous" and willing to allow ssh access to a specific command using
the
.Xr sshd 8
authorized_keys mechanism.
.Pp
The features of
.Nm
that make it robust are:
.Bl -bullet -offset indent -compact
.It
No metadata stored in dataset (such as holds or other "state" metadata)
.It
All snapshots have corresponding bookmark (in case the snapshot is destroyed
to save space the bookmark can still be used as an incremental source)
.It
Resumable send/receive operations (interrupted transfers will resume if
possible)
.It
Sends snapshots individually (and will always keep running until thet most
snapshot on local is transferred to remote; even if it was created after
the mirror operation started)
.El
.Pp
The philosopyh is that if the dataset does not exist on the remote server it
will be created, otherwise, as long as it can find a snapshot or bookmark
on the local computer matching the latest snapshot on the remote computer it
will send all snapshots from local to remote until remote has the latest.

.Ss SUMMARY OF OPERATION
No configuration is required to use the
.Nm Cm snapshot
command, and minimal configuration is required on the remote backup server to
use the
.Nm Cm mirror
command.
.Pp
The
.Nm Cm mirror
subcommand queries the remote backup server for each filesystem to be mirrored
and creates the filesystem if it doesn't exist by mirroring the oldest
available snapshot from the computer being backed up, and then sending all
intermediary snapshots up until the most recent.
At the conclusion of each send operation the remote backup server will be
queried again and the process repeated until the guid of the most recent
snapshots on both the computer being backed up and the remote backup server are
the same, meaning the remote backup server has the latest snapshot that exists
on the computer being backed up.
.Pp
Since the
.Nm Cm mirror
command queries for the latest snapshot after it completes each send it will
always make sure to send the latest available snapshot even if additional
snapshots were created since the
.Nm Cm mirror
command started.
.Pp
All snapshots are sent raw (ie. with the
.Fl w
flag) so that encrypted snapshots may be sent without the decryption key ever
being known by the remote backup server.
.Pp
The
.Xr sshd 8
authorized_keys mechanism is used on the remote backup server to allow
ssh access by a non-privileged user, and to run
.Nm
.Cm server
.Ar filesystem_root
instead of a login shell which will restrict access to a limited number of
.Xr zfs 8
commands, defined in the server function in the script, that are sandboxed to
.Ar filesystem_root
and its descendants.
.Pp
The
.Nm Cm prune
command prunes old snapshots according to a pre-defined retention schedule.
.Pp
The
.Cm configuser ,
.Cm allowsend ,
and
.Cm allowreceive
subcommands are provided to create a non-privileges zfsync system user,
configure the local and remote systems, and delegate zfs permissions as
required.
.Pp
The
.Cm list ,
.Cm destroy ,
.Cm recover ,
and
.Cm rprune
subcommands are provided to list, destroy, recover, and prune snapshots on the
remote backup server.
These subcommands are simple wrappers that forward the command over ssh and run
it on the remote backup server (where the
.Cm recover
command runs
.Cm send ) .
.Ss SYSTEMD INTEGRATION
On systems that have
.Xr systemd 1
the
.Em zfsync-snapshot.service ,
.Em zfsync-mirror.service ,
.Em zfsync-prune.service ,
and
.Em zfsync-snapshot.timer
units are installed in order to automate periodic snapshots and mirror commands.
.Pp
The
.Em zfsync-snapshot.timer
service will start the
.Em zfsync-snapshot.service
unit which will only run if the
.Pa /usr/local/etc/zfsync/snapshot.conf
file exists and defines the
.Ev DATASETS
environment variable with the options and datasets to be passed to the
.Nm Cm snapshot
command.
.Pp
The
.Em zfsync-mirror.service
is included as a "Wants" and "After" dependency in the
.Em zfsync-snapshot.service
so it will be executed after the snapshots are taken if the
.Pa /usr/local/etc/zfsync/mirror.conf
file exists and defines the
.Ev DATASETS
and
.Ev SERVER
environment variables with the options and datasets to be passed to the
.Nm Cm mirror
command.
.Pp
The zfsync-mirror.service has a "Wants" and "Before" dependency on the
.Em zfsync-prune.service
service which will only run if the
.Pa /usr/local/etc/zfsync/prune.conf
file exists and defines the
.Ev DATASETS
environment variable with the options and datasets to be pruned.
.Pp
Three separate configuration files are used in order to be able to run one or
both services; but typically one config file can be a symlink to the others.

.Sh SUBCOMMANDS
.Bl -tag -width ""
.It Nm Fl ?
Displays a help message.
.El
.Ss SNAPSHOT AND MIRROR SUBCOMMANDS
.Bl -tag -width ""
.It Xo
.Nm
.Cm snapshot
.Op Fl r Ns | Ns Fl d Ar depth
.Ar filesystem Ns ...
.Xc
Creates snapshot(s), and corresponding bookmark(s) of
.Ar filesystem(s) .
.Pp
The snapshot/bookmark name(s) will be determined from the
.Ev SNAPPREFIX
environment variable concatenated with the date based on
the command in the
.Ev DATECMD
environment variable.
.Pp
All
.Ar filesystem
arguments are passed together to the
.Cm zfs snapshot
command so they are created atomically.
.Bl -tag -width "-o"
.It Fl r
Create recursive snapshots of all descendant filesystems.
.It Fl d Ar depth
Create recursive snapshots of
.Ar depth
levels of descendant filesystems.
.El
.It Xo
.Nm \" mirror command
.Cm mirror
.Ar destination
.Op Fl r Ns | Ns Fl d Ar depth
.Ar filesystem Ns ...
.Xc
Mirrors snapshots from the local computer to the remote backups server at
.Ar destination .
The
.Fl r
and
.Fl d
.Ar depth
options are the same as the
.Nm
.Cm snapshot
subcommand.
.Pp
In order for the remote backup server to receive the snapshots it must execute
the
.Nm
.Cm server
command using the
.Xr sshd 8
authorized_keys functionality. The local user must use an ssh key
to login to the remote backup server (password login is not supported since
the remote backup server security is provided by the authorized_keys
mechanism).
.It Xo
.Nm \" backup command
.Cm backup
.Ar destination
.Op Fl r Ns | Ns Fl d Ar depth
.Ar filesystem Ns ...
.Xc
Runs
.Nm
.Cm snapshot
command followed by
.Nm
.Cm mirror
command with the same flags and options that apply to those subcommands.
.It Xo
.Nm \" prune subcommand
.Cm prune
.Op Fl f
.Op Fl r Ns | Ns Fl d Ar depth
.Oo Ar filesystem Ns | Ns Ar volume Ns Oc Ns ...
.Xc
Prunes snapshots according to the following retention schedule to ensure there
are no more than one per:
.Bl -bullet -offset indent -compact
.It
every 15 min for the past four hours
.It
every 1 hour for the past seven days
.It
every 1 day for the past four weeks
.It
every 1 week for the past six months
.It
every 1 month for the past six years
.It
every 1 year for the past ten years
.El
Since this command is destructive, it requires the use of the
.Fl f
flag to actually destroy snapshots.
.Pp
Snapshots schedule to be pruned will be listed on stdout, and snapshots
to be retained will be listed on stderr with bold text. If the
.Fl f
flag is specified the snapshots listed on stdout will actually be destroyed,
otherwise the user can use the output of stdout to manually process (ie. using
the
.Xr xargs 1
utility).
.Pp
The
.Fl r
and
.Fl -d Ar depth
options are the same as for the
.Nm
.Cm snapshot
command.
.El

.Ss REMOTE BACKUP SERVER COMMANDS
.Bl -tag -width ""
.It Xo
.Nm \" server command
.Cm server
.Ar filesystem
.Xc
This command must be run from the
.Xr sshd 8
authorized_keys file on the remote backup server were the
.Ar filesystem
argument specifies the root filesystem under which to receive all snapshots.
This will be prefixed to all snapshots received, queried, destroyed, or
recovered to ensure that the sender only has access to filesystems below this
root as a security measure.
.Pp
In order to further enhance security, the "restrict" option should also be
used in the authorized_keys file to ensure the sender is not able to perform
malicious activities such as port forwarding, etc.
.Pp
.Em DO NOT PUT THIS IN THE
.Pa /root/.ssh/authorized_keys
.Em OR YOU RISK NOT BEING ABLE TO LOG INTO YOUR SERVER AS ROOT SINCE THIS PREVENTS
.Xr sshd 8
.Em FROM RUNNING THE LOGIN SHELL!
(use the
.Nm Cm configuser
subcommand to create a dedicated user instead)
.El
.Ss SUBCOMMANDS TO LIST, DESTROY, AND RECOVER DATASETS FROM REMOTE BACKUP SERVER
.Bl -tag -width ""
.It Xo
.Nm \" list
.Cm list
.Ar destination
.Op Fl r Ns | Ns Fl d Ar depth
.Op Fl Hp
.Oo Fl o Ar property Ns Oo , Ns Ar property Oc Ns ... Oc
.Oo Fl s Ar property Oc Ns ...
.Oo Fl S Ar property Oc Ns ...
.Oo Fl t Ar type Ns Oo , Ns Ar type Oc Ns ... Oc
.Oo Ar filesystem Ns | Ns Ar volume Ns | Ns Ar snapshot Oc Ns ...
.Xc
This command executes
.Cm zfs list
on the remote backup server at
.Ar destination .
.Pp
All options and arguments after the
.Ar destination
argument are the same as for the
.Xr zfs 8
.Cm list
command.
.El
.Pp
.Bl -tag -width "" -compact
.It Xo
.Nm \" destroy
.Cm destroy
.Ar destination
.Op Fl Rfnprv
.Ar filesystem Ns | Ns Ar volume
.Xc
.It Xo
.Nm
.Cm destroy
.Ar destination
.Op Fl Rdnprv
.Ar filesystem Ns | Ns Ar volume Ns @ Ns Ar snap Ns
.Oo % Ns Ar snap Ns Oo , Ns Ar snap Ns Oo % Ns Ar snap Oc Oc Oc Ns ...
.Xc
.It Xo
.Nm
.Cm destroy
.Ar destination
.Ar filesystem Ns | Ns Ar volume Ns # Ns Ar bookmark
.Xc
These commands execute
.Cm zfs destroy
on the remote backup server at
.Ar destination .
.Pp
All options and arguments after the
.Ar destination
argument are the same as for the
.Xr zfs 8
.Cm destroy
command.
.El
.Pp
.Bl -tag -width "" -compact
.It Xo
.Nm \" recover
.Cm recover
.Op Fl DLPRbcehnpvw
.Op Oo Fl I Ns | Ns Fl i Oc Ar snapshot
.Ar snapshot
.Xc
.It Xo
.Nm
.Cm recover
.Op Fl LPcenvw
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Ar filesystem Ns | Ns Ar volume Ns | Ns Ar snapshot
.Xc
.It Xo
.Nm
.Cm recover
.Op Fl Penv
.Fl t Ar receive_resume_token
.Xc
These commands execute
.Cm zfs send
on the remote backup server at
.Ar destination
in order to recover a snapshot from the remote backup server.
.Pp
All options and arguments after the
.Ar destination
argument are the same as for the
.Xr zfs 8
.Cm send
command.
.El
.Ss USER MANAGEMENT AND CONFIGURATION SUBCOMMANDS
.Bl -tag -width ""
.It Xo
.Nm \" configuser
.Cm configuser
.Op Ar username
.Op Ar home_dir
.Xc
This command creates the
.Em zfsync
system user with a home directory at
.Pa /usr/local/share/zfsync ,
a symlink from
.Pa /usr/local/share/zfsync/.ssh
to
.Pa /usr/local/share/zfsync/ssh
(for convienence), and a
.Xr ssh 1
key pair in
.Pa /usr/local/share/zfsync/.ssh .
.Pp
This command should be run on both the local computer and the remote backup
server with root permissions before the
.Nm Cm allowsend
or
.Nm Cm allowreceive
commands are used.
.Pp
The
.Cm allowreceive
command will update the
.Pa /usr/loral/share/zfsync/.ssh/authorized_keys
file in this home directory.
.It Xo
.Nm \" allowsend
.Cm allowsend
.Ar filesystem
.Op Ar username
.Xc
This command should be run on the local computer with root permissions to
delegate permissions to the
.Em zfsync
system user to be able to list, take, send, and prune snapshots.
.Pp
The output of this command will include a
.Xr ssh 1
public key which is used as input to the
.Nm Cm allowreceive
command on the remote backup server.

.It Xo
.Nm \" allowreceive
.Cm allowreceive
.Ar filesystem
.Ar key
.Op Ar quota
.Op Ar username
.Xc
This command should be run on the remote backup server with root permissions
to delegate permissions to the
.Em zfsync
system user to be able to list, receive, send, and prune snapshots under the
.Ar filesystem
dataset.
.Pp
The
.Ar key
argument is the
.Xr ssh 1
public key of the sender (typically from the
.Nm Cm allowsend
command).
.Pp The optional
.Ar quota
argument may be provided to apply a quota to the
.Ar filesystem .
.It Xo
.Nm \" rprune subcommand
.Cm rprune
.Ar destination
.Op Fl f
.Op Fl r Ns | Ns Fl d Ar depth
.Oo Ar filesystem Ns | Ns Ar volume Ns Oc Ns ...
.Xc
This command prunes snapshots on the remote backup server and other than the
.Ar destination
argument has the same options as the
.Cm prune
command described above.
.El



.Sh ENVIRONMENT
The following environment variables are used in the script.
.Pp
At the moment, there is no mechanism for loading a config file in order to set
them so they would need to be manually set if required.
.Pp
It is trivial to add a line to source a config file to set environment
variables, but too much configuration goes against the philosophy of the
script to keep things simple.
.Pp
Feel free to raise an issue at
.Pa https://github.com/varasys/zfsync
if you would benefit from the script sourcing a config file to set these
environment variables.
.Bl -tag -width Ds
.It Ev AUTOSNAPPROP
User defined zfs filesystem property name which will exclude the filesystem
from being included in a 
.Nm
.Cm snapshot
operation when set to false (default:
.Em com.sun:auto-snapshot ) .
.It Ev AUTOMIRRORPROP
User defined zfs filesystem property name which will exclude the filesystem
from being included in a 
.Nm
.Cm mirror
operation when set to false (default:
.Em com.sun:auto-snapshot ) .
.It Ev SNAPPREFIX
The prefix applied to snapshot names (default:
.Em zfsync_ ) .
.It Ev DATECMD
The command used to generate the date suffix for the snapshot name (default:
.Cm date -u +%F_%H-%M-%S_UTC ) .
.It Ev BUFFER
The command to use to buffer I/O on the sending and receiving side. The
default for this if
.Cm mbuffer
is installed is
.Cm mbuffer -s 128k -q ,
otherwise
.Cm cat
if
.Cm mbuffer
is not installed. The
.Fl r Ar rate
argument may be provided to
.Cm mbuffer
to throttle the transfer rate.
.El

.Sh FILES
.Bl -tag -width Ds -compact
.It Pa /usr/local/etc/zfsync/
.It Pa /usr/local/etc/zfsync/snapshot.conf
.It Pa /usr/local/etc/zfsync/mirror.conf
.It Pa /usr/local/etc/zfsync/prune.conf
If systemd is installed this directory and config files are used to
configure the zfsync-snapshot.service, zfsync-mirror.service,
and zfsync-prune.service services.

.It Pa /usr/local/share/zfsync
.It Pa /usr/local/share/zfsync/.ssh/id_ed25519
.It Pa /usr/local/share/zfsync/.ssh/id_ed25519.pub
This is the home directory and ssh keys for the system zfsync user
created with the
.Nm Cm configuser
command.

.It Pa /usr/local/share/zfsync/.ssh/authorized_keys
This is the authorized_keys file created/updated with the
.Nm Cm allowreceive
command.
.El

.Sh EXIT STATUS
The
.Nm
utility exits 0 or success, or >0 if one or more errors occur indicating the
number of errors.

.Sh EXAMPLES
The following examples are intended to be shown in the same order they would be
used when configuring a system the first time.
.Pp
The following terms differentiate the local and remote computer in these examples.
.Bl -tag -width "REMOTE" -compact -offset indent
.It LOCAL
the local computer being mirrored/backed up
.It REMOTE
the remote computer receiving the mirror/backup
.El

.Ss Configure the LOCAL computer

Configure the zfsync system user which will create the the
.Pa /usr/local/share/zfsync
home directory, and ssh keys in the
.Pa /usr/local/share/zfsync/.ssh/
directory.
.Pp
.Dl $ zfsync configuser

Delegate send permissions to the zfsync user for the filesystem(s) to be backed
up. Copy the key from the output of this command to be used as input to the
.Nm Cm allowreceive
command (see example below).
.Pp
.Dl $ zfsync allowsend zpool/home

Exclude a subfilesystem from being included in snapshots (as needed).
.Pp
.Dl $ zfs set io.varasys:auto-snapshot=false zpool/home/tmp

.Ss Configure the REMOTE computer

Configure the zfsync system user which will create the the
.Pa /usr/local/share/zfsync
home directory, and ssh keys in the
.Pa /usr/local/share/zfsync/.ssh/
directory. The ssh keys aren't strictly necessary, but the .ssh directory
is since it will contain the 'authorized_keys' file.
.Pp
.Dl $ zfsync configuser

Delegate receive permissions to the zfsync user for the root filesystem
under which received filesystems will be stored (<key> is from the output of
the
.Nm Cm allowsend
command). This command will automatically configure the
.Pa /usr/local/share/zfsync/.ssh/authorized_keys
file with the root filesystem and <key>.
.Pp
.Dl $ zfsync allowreceive zpool/backups <key>

.Ss Create, mirror, and prune snapshots on LOCAL computer

Create recursive snapshots
.Pp
.Dl $ zfsync snapshot -r zpool/home

Mirror filesystem snapshots to REMOTE. Note that the first time
you run this you will likely be prompted to verify the authenticity of the
remote backup server based on its
.Xr ssh 1
key fingerprint and update the LOCAL
.Pa /usr/local/share/zfsync/.ssh/known_hosts
file.
This requires you to be able to type 'yes' so you should always run the
.Nm Cm mirror
command at least once before relying on an automated systemd service or
chron job.
.Pp
.Dl $ zfsync mirror <destination> -r zpool/home

Prune LOCAL snapshots
.Pp
.Dl $ zfsync prune -f zpool/home

Prune REMOTE snapshots
.Pp
.Dl $ zfsync rprune <destination> -f zpool/home

.Sh SEE ALSO
.Xr ssh 1 ,
.Xr sshd 8 ,
.Xr zfs 8 ,
.Xr zpool 8

.Sh CAVEATS
The only time the
.Nm
script will destroy data is when
.Nm Cm prune
is called with the
.Fl f
flag. Because of this, there are a couple scenarios where manual
intervention may be required:
.Bl -bullet -offset indent -compact
.It
If the latest snapshot on REMOTE does not have a corresponding snapshot
or bookmark on LOCAL, matually rollback REMOTE to a common snapshot or
bookmark that exists on LOCAL.
.It
If an incremental transfer was interrupted, and the ending snapshot for
the transfer was destroyed on LOCAL, then the transfer must be manually
aborted on REMOTE with
.Cm zfs receive Fl A Ar dataset .
.El
